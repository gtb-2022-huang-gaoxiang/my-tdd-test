/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package App;

import App.commands.*;

import java.util.Arrays;

public class App {

    private Repository repository;

    public static void main(String[] args) {
        new App().run(args);
    }

    public void run(String... args) {
        repository = new Repository();

        if (args.length <= 0) {
            return;
        }

        runCommand(args);
    }

    private void runCommand(String[] args) {
        String[] parameters = Arrays.copyOfRange(args, 1, args.length);
        int[] ids;
        switch (args[0]) {
            case "init":
                final InitCommand initCommand = new InitCommand(repository);
                initCommand.execute();
                break;
            case "list":
                final ListCommand listCommand = new ListCommand(repository);
                listCommand.execute();
                break;
            case "add":
                final AddCommand addCommand = new AddCommand(repository);
                addCommand.execute(parameters);
                break;
            case "mark":
                final MarkCommand markCommand = new MarkCommand(repository);
                ids = Arrays.stream(parameters).filter(item -> item.matches("\\d+")).mapToInt(Integer::parseInt).toArray();
                markCommand.execute(ids);
                break;
            case "unmark":
                final UnmarkCommand unmarkCommand = new UnmarkCommand(repository);
                ids = Arrays.stream(parameters).filter(item -> item.matches("\\d+")).mapToInt(Integer::parseInt).toArray();
                unmarkCommand.execute(ids);
                break;
            case "remove":
                final RemoveCommand removeCommand = new RemoveCommand(repository);
                ids = Arrays.stream(parameters).filter(item -> item.matches("\\d+")).mapToInt(Integer::parseInt).toArray();
                removeCommand.execute(ids);
                break;
            default:
                break;
        }
    }

}
